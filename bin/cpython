#!/usr/bin/env node
'use strict'
const ncpy = require('../')
let allowedFlags = [
  '--example',
  '--help'
]


let argv = process.argv

parse(argv)

function parse(arr) {
  // check if you should go into repl mode
  argv.length === 2 ? pyRepl() : 0;

  let f = flags(arr)

  f.description ? description() : 0;
}

function flags(arr) {
  let hasHelp = false
  let flags = []

  arr.forEach(function(el) {
    let arg = el.trim()
    let f = arg.match(/(\-\-)\w+/g)
    let h = arg.match(/(\-\-)help/g)

    if (f) {
      // push match onto the stack
      flags = Array.prototype.concat(flags, f)
      // additionally check whether description is required
      if (h) hasHelp = true
    }
  })
  return {
    flags: flags,
    description: hasHelp
  }
}

function version () {

}

function example () {
  // hit "a = (1, 2, 3)"
  //
  //  or as smoke test...
  //
  // > a = 1
  // > b = 2
  // > a,b = b,a
  // > a
  // 2
  // > b
  // 1
  // ncpy.repl()
}

function description() {
  let desc = [
    "",
    "Usage: cpython [options] [file(s)]",
    "",
    "Native bindings to the Python interpreter.",
    "Run Python code with Node.js",
    "",
    "Options:",
    "",
    "\t-h, --help           output usage information",
    "\t-v, --version        output versions",
    ""
  ].forEach(function (el) {
      console.log("\t" + el);
  })
}

function pyRepl() {
  ncpy.repl()
}
