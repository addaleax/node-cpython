var gulp = require("gulp");var babel = require("gulp-babel");var mocha = require('gulp-mocha');var karma = require('gulp-karma');// =============================================================================// ================================= Compile:JS ================================// =============================================================================/****/gulp.task("babel", function () {  return gulp.src("./src/es6/**/*.js")    .pipe(babel())    .pipe(gulp.dest("./src/es5"));});// =============================================================================// ================================= Tests =====================================// =============================================================================/****/gulp.task('mocha', function() {  require('babel/register');  return gulp.src(['test/**/*.spec.js'], { read: false })    .pipe(mocha({      reporter: 'spec',      compilers: 'js:babel/register'//,      //  globals: {      //   should: require('chai')      //  }    }));});var testFiles = [  'src/es6/**/*.js',  'test/*.js'];gulp.task('karma', function() {  // Be sure to return the stream  return gulp.src(testFiles)    .pipe(karma({      configFile: 'karma.conf.js',      action: 'run'    }))    .on('error', function(err) {      // Make sure failed tests cause gulp to exit non-zero      throw err;    });});// =============================================================================// ================================= Gulp  =====================================// =============================================================================/****/gulp.task('watch', function() {  gulp.watch('src/es6/**/*.js', gulp.series('babel'));  gulp.watch('test/**/*.spec.js', gulp.series('mocha'));});gulp.task('default', gulp.series(gulp.series('mocha'), gulp.parallel('watch','babel')));